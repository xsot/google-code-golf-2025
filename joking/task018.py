# zip fiddling
def p(g):G={i*1j+j:g for i,g in enumerate(g)for j,g in enumerate(g)if g};[(s:={j},[abs(x-a)<2==s.add(x)for x in[*G]*5for a in[*s]],[2for a in[*s][4:]for a in[1,3,10,11]for O in[*G]if all(G[x]in(max([G[x]for x in[*G]],key=[G[x]for x in[*G]].count),G.get((x-j-a//4*(x-j).real)*1j**a+O))for x in s)for x in s for i,g[int(i.imag)][int(i.real)]in(((x-j-a//4*(x-j).real)*1j**a+O,G[x]),(x,0))])for j in[*G]];return g

##
def p(g):G={i*1j+j:g for i,g in enumerate(g)for j,g in enumerate(g)if g};[(s:={j},[abs(x-a)<2==s.add(x)for x in[*G]*#[*range(5,10)]##for a in[*s]],[#[*range(10)]##for a in[*s][#[3,4,5]##:]for a in[1,3,10,11]for O in[*G]if all(G[x]in(max([G[x]for x in[*G]],key=[G[x]for x in[*G]].count),G.get((x-j-a//#[4,5]##*(x-j).real)*1j**a+O))for x in s)for x in s for i,g[int(#['(-i*1j).real','i.imag']##)][int(i.real)]in(((x-j-a//#[prev_vals[-2]]##*(x-j).real)*1j**a+O,G[x]),(x,0))])for j in[*G]];return g